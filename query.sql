-- MySQL Script generated by MySQL Workbench
-- Fri Aug 19 02:37:07 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- -----------------------------------------------------
-- Schema db_nia_health
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db_nia_health
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_nia_health` DEFAULT CHARACTER SET utf8;
USE `db_nia_health`;

-- -----------------------------------------------------
-- Table `assessment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assessment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `patient_id` INT NOT NULL,
  `assessment_type` INT NOT NULL,
  `timestamp` DATE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `assessment_patient_idx` (`patient_id` ASC) VISIBLE,
  INDEX `assessment_type_idx` (`assessment_type` ASC) VISIBLE,
  CONSTRAINT `assessment_patient`
    FOREIGN KEY (`patient_id`)
    REFERENCES `patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `assessment_type`
    FOREIGN KEY (`assessment_type`)
    REFERENCES `assessment_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table `assessment_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assessment_type` (
  `id` INT NOT NULL,
  `label` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
;


-- -----------------------------------------------------
-- Table `images`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `images` (
  `id` INT NOT NULL,
  `url` VARCHAR(250) NOT NULL,
  `assessment_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `assessment_image_idx` (`assessment_id` ASC) VISIBLE,
  CONSTRAINT `assessment_image`
    FOREIGN KEY (`assessment_id`)
    REFERENCES `assessment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table `patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patient` (
  `id` INT NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE)
;


-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user` (
  `id` INT NOT NULL,
  PRIMARY KEY (`id`))
;


-- -----------------------------------------------------
-- Table `user_notes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user_notes` (
  `id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `assessment_id` INT NOT NULL,
  `content` VARCHAR(600) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `user_note_assessment_idx` (`assessment_id` ASC) VISIBLE,
  INDEX `user_note_user_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `user_note_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `assessment_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_note_assessment`
    FOREIGN KEY (`assessment_id`)
    REFERENCES `assessment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table `users_patients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `users_patients` (
  `id` INT NOT NULL,
  `patient_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `users_patients_patient_idx` (`patient_id` ASC) VISIBLE,
  INDEX `users_patients_user_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `users_patients_patient`
    FOREIGN KEY (`patient_id`)
    REFERENCES `patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `users_patients_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;
